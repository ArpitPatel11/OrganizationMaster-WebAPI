// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using OrganizationMaster.Models;

namespace OrganizationMaster.Data
{
    public partial class FirstDBContext : DbContext
    {
        public FirstDBContext()
        {
        }

        public FirstDBContext(DbContextOptions<FirstDBContext> options)
            : base(options)
        {
        }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Tblbranchmaster> Tblbranchmasters { get; set; }
        public virtual DbSet<Tblcity> Tblcities { get; set; }
        public virtual DbSet<Tblcountry> Tblcountries { get; set; }
        public virtual DbSet<Tbldepartmentmaster> Tbldepartmentmasters { get; set; }
        public virtual DbSet<Tbldesignationmaster> Tbldesignationmasters { get; set; }
        public virtual DbSet<Tblorganizationmaster> Tblorganizationmasters { get; set; }
        public virtual DbSet<Tblstate> Tblstates { get; set; }
        //public List<Tblorganizationmaster> organizationMasters { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Employee>(entity =>
            {
                entity.HasKey(e => e.EmployeeId);

                entity.ToTable("tblemployee");

                entity.Property(e => e.EmployeeId).HasColumnName("EmployeeId");

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.DepartmentName).HasMaxLength(50);

                entity.Property(e => e.Salary).HasMaxLength(50);
          
            });
            modelBuilder.Entity<Tblbranchmaster>(entity =>
            {
                entity.HasKey(e => e.BranchId);

                entity.ToTable("tblbranchmaster");

                entity.Property(e => e.BranchId).HasColumnName("Branch_Id");

                entity.Property(e => e.Address).HasMaxLength(50);

                entity.Property(e => e.BranchName).HasMaxLength(50);

                entity.Property(e => e.CityId).HasColumnName("City_Id");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Fax).HasMaxLength(50);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Note).HasMaxLength(50);

                entity.Property(e => e.OraganizationId).HasColumnName("Oraganization_Id");

                entity.Property(e => e.PhoneNumber).HasMaxLength(50);

                entity.Property(e => e.ZipCode).HasMaxLength(50);
            });

            modelBuilder.Entity<Tblcity>(entity =>
            {
                entity.HasKey(e => e.CityId);

                entity.ToTable("tblcity");

                entity.Property(e => e.CityId).HasColumnName("City_Id");

                entity.Property(e => e.CityName)
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.StateId).HasColumnName("State_Id");
            });

            modelBuilder.Entity<Tblcountry>(entity =>
            {
                entity.HasKey(e => e.CountryId);

                entity.ToTable("tblcountry");

                entity.Property(e => e.CountryId).HasColumnName("Country_Id");

                entity.Property(e => e.CountryName).HasMaxLength(50);
            });

            modelBuilder.Entity<Tbldepartmentmaster>(entity =>
            {
                entity.HasKey(e => e.DepartmentId);

                entity.ToTable("tbldepartmentmaster");

                entity.Property(e => e.DepartmentId).HasColumnName("Department_Id");

                entity.Property(e => e.BranchId).HasColumnName("Branch_Id");

                entity.Property(e => e.DepartmentName).HasMaxLength(50);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OraganizationId).HasColumnName("Oraganization_Id");
            });

            modelBuilder.Entity<Tbldesignationmaster>(entity =>
            {
                entity.HasKey(e => e.DesignationId);

                entity.ToTable("tbldesignationmaster");

                entity.Property(e => e.DesignationId).HasColumnName("Designation_Id");

                entity.Property(e => e.BranchId).HasColumnName("Branch_Id");

                entity.Property(e => e.DepartmentId).HasColumnName("Department_Id");

                entity.Property(e => e.DesignationName).HasMaxLength(50);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.OraganizationId).HasColumnName("Oraganization_Id");
            });

            modelBuilder.Entity<Tblorganizationmaster>(entity =>
            {
                entity.HasKey(e => e.OraganizationId);

                entity.ToTable("tblorganizationmaster");

                entity.Property(e => e.OraganizationId).HasColumnName("Oraganization_Id");

                entity.Property(e => e.Address).HasMaxLength(50);

                entity.Property(e => e.CityId).HasColumnName("City_Id");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.Fax).HasMaxLength(50);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OraganizationName).HasMaxLength(50);

                entity.Property(e => e.PhoneNumber).HasMaxLength(50);

                entity.Property(e => e.Prefix)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationNumber).HasMaxLength(50);

                entity.Property(e => e.ZipCode).HasMaxLength(50);
            });

            modelBuilder.Entity<Tblstate>(entity =>
            {
                entity.HasKey(e => e.StateId);

                entity.ToTable("tblstate");

                entity.Property(e => e.StateId).HasColumnName("State_Id");

                entity.Property(e => e.CountryId).HasColumnName("Country_Id");

                entity.Property(e => e.StateName)
                    .HasMaxLength(50)
                    .IsFixedLength();
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}